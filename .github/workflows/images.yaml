name: build-images

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: {}
    
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull-request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

env:
  REGISTRY: ghcr.io

jobs:
  list:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.output-images.outputs.images }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: list images
        id: output-images
        run: |
          echo images="$(python ./tekton/images/generate-matrix.py tekton/images | jq -c .)" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: list
    strategy:
      fail-fast: false # Keep running if one image fails
      matrix: ${{fromJSON(needs.list.outputs.images)}}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@dbf178ceecb9304128c8e0648591d71208c6e2c9 # v45.0.7
        with:
          files: |
            tekton/images/${{ matrix.name }}/**
            tekton/images/generate-matrix.py
            .github/workflows/images.yaml
      - name: changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo ${{ steps.changed-files.outputs.any_changed }}
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
      - name: Log in to the Container registry
        if: steps.changed-files.outputs.any_changed == 'true' # || github.event_name != 'pull_request'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        if: steps.changed-files.outputs.any_changed == 'true' # || github.event_name != 'pull_request'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        if: steps.changed-files.outputs.any_changed == 'true' # || github.event_name != 'pull_request'
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changed-files.outputs.any_changed == 'true' # || github.event_name != 'pull_request'
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}
          tags: |
            # set latest tag for default branch
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image
        if: steps.changed-files.outputs.any_changed == 'true' # || github.event_name != 'pull_request'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          platforms: ${{ matrix.platforms }}
          context: tekton/images/${{ matrix.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
