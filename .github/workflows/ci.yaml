name: ci

on: [pull_request] # yamllint disable-line rule:truthy

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull-request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read
  checks: write # Used to annotate code in the PR

jobs:
  build:
    name: build-lint-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: 
          - bots/buildcaptain
          - bots/mariobot
          - pipelinerun-logs
          - tekton/ci/interceptors/add-team-members
          - tekton/ci/interceptors/add-pr-body
          - tekton/ci/interceptors/github
          - tekton/ci/cluster-interceptors/add-pr-body
          - tekton/ci/cluster-interceptors/build-id
          - tekton/ci/custom-tasks/pr-commenter
          - tekton/ci/custom-tasks/pr-status-updater
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00  # v6.0.0
      with:
        go-version-file: "go.mod"
    - name: build
      working-directory: ${{ matrix.project }}
      run: |
        go build -v ./...
    - name: gofmt
      working-directory: ${{ matrix.project }}
      run: |
        gofmt_out=$(gofmt -d $(find * -name '*.go' ! -path 'vendor/*' ! -path 'third_party/*'))
        if [[ -n "$gofmt_out" ]]; then
            failed=1
        fi
        echo "$gofmt_out"
    - name: golangci-lint
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
      with:
        version: v2.1.6
        only-new-issues: true
        args: --timeout=10m
        working-directory: ${{ matrix.project }}
    - name: yamllint
      working-directory: ${{ matrix.project }}
      run: |
        sudo apt update && sudo apt install -y yamllint
        yamllint -c $(git rev-parse --show-toplevel)/.yamllint $(find . -path ./vendor -prune -o -type f -regex ".*y[a]ml" -print | tr '\n' ' ')
    - name: test
      working-directory: ${{ matrix.project }}
      run: |
        go test -v ./...
