plank:
  job_url_template: 'https://tekton-releases.appspot.com/build/tekton-prow/{{if or (eq .Spec.Type "presubmit") (eq .Spec.Type "batch")}}pr-logs/pull{{with .Spec.Refs}}/{{.Org}}_{{.Repo}}{{end}}{{else}}logs{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://tekton-releases.appspot.com/pr/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://prow.tekton.dev/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 15000000000 # 15s
    utility_images:
      clonerefs: "gcr.io/k8s-prow/clonerefs@sha256:b62ba1f379ac19c5ec9ee7bcab14d3f0b3c31cea9cdd4bc491e98e2c5f346c07"
      initupload: "gcr.io/k8s-prow/initupload@sha256:58f89f2aae68f7dc46aaf05c7e8204c4f26b53ec9ce30353d1c27ce44a60d121"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20180512-0255926d1"
      sidecar: "gcr.io/k8s-prow/sidecar@sha256:8807b2565f4d2699920542fcf890878824b1ede4198d7ff46bca53feb064ed44"
    gcs_configuration:
      bucket: "tekton-prow"
      path_strategy: "explicit"
    gcs_credentials_secret: "test-account"
branch-protection:
  orgs:
    tektoncd:
      # Protect all branches in tekton
      # This means all prow jobs with "always_run" set are required
      # to pass before tide can merge the PR.
      # Currently this is manually enabled by the tekton org admins,
      # but it's stated here for documentation and reference purposes.
      protect: true
      # Admins can overrule checks
      enforce_admins: false
tide:
  queries:
  - repos:
    - tektoncd/catalog
    - tektoncd/cli
    - tektoncd/community
    - tektoncd/dashboard
    - tektoncd/experimental
    - tektoncd/operator
    - tektoncd/pipeline
    - tektoncd/plumbing
    - tektoncd/triggers
    - tektoncd/website
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
  merge_method:
    tektoncd/catalog: rebase
    tektoncd/cli: rebase
    tektoncd/community: rebase
    tektoncd/dashboard: rebase
    tektoncd/experimental: rebase
    tektoncd/operator: rebase
    tektoncd/pipeline: rebase
    tektoncd/plumbing: rebase
    tektoncd/triggers: rebase
    tektoncd/website: rebase
  target_url: https://prow.tekton.dev/tide

presubmits:
  tektoncd/cli:
  - name: pull-tekton-cli-build-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-cli-build-tests"
    trigger: "(?m)^/test (all|pull-tekton-cli-build-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-cli-unit-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-cli-unit-tests"
    trigger: "(?m)^/test (all|pull-tekton-cli-unit-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-cli-integration-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-cli-integration-tests"
    trigger: "(?m)^/test (all|pull-tekton-cli-integration-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-cli-go-coverage
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-cli-go-coverage"
    trigger: "(?m)^/test (all|pull-tekton-cli-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    clone_uri: "https://github.com/tektoncd/cli.git"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:v20190612-ae60484
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-gcs-bucket=tekton-prow"
        - "--postsubmit-job-name=post-tekton-cli-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--profile-name=coverage_profile.txt"
        - "--cov-target=."
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/github-token/oauth"
        volumeMounts:
        - name: github-token
          mountPath: /etc/github-token
          readOnly: true
      volumes:
      - name: github-token
        secret:
          secretName: oauth-token
  tektoncd/dashboard:
  - name: pull-tekton-dashboard-build-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-dashboard-build-tests"
    trigger: "(?m)^/test (all|pull-tekton-dashboard-build-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-dashboard-unit-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test tekton-dashboard-unit-tests"
    trigger: "(?m)^/test (all|tekton-dashboard-unit-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-dashboard-integration-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-dashboard-integration-tests"
    trigger: "(?m)^/test (all|pull-tekton-dashboard-integration-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  tektoncd/experimental:
  - name: pull-tekton-experimental-build-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-experimental-build-tests"
    trigger: "(?m)^/test (all|pull-tekton-experimental-build-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-experimental-unit-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test tekton-experimental-unit-tests"
    trigger: "(?m)^/test (all|tekton-experimental-unit-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-experimental-integration-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-experimental-integration-tests"
    trigger: "(?m)^/test (all|pull-tekton-experimental-integration-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  tektoncd/operator:
  - name: pull-tekton-operator-build-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-operator-build-tests"
    trigger: "(?m)^/test (all|pull-tekton-operator-build-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-operator-unit-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-operator-unit-tests"
    trigger: "(?m)^/test (all|pull-tekton-operator-unit-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-operator-integration-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-operator-integration-tests"
    trigger: "(?m)^/test (all|pull-tekton-operator-integration-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-operator-go-coverage
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-operator-go-coverage"
    trigger: "(?m)^/test (all|pull-tekton-operator-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    clone_uri: "https://github.com/tektoncd/operator.git"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:v20190612-ae60484
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-gcs-bucket=tekton-prow"
        - "--postsubmit-job-name=post-tekton-operator-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--profile-name=coverage_profile.txt"
        - "--cov-target=."
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/github-token/oauth"
        volumeMounts:
        - name: github-token
          mountPath: /etc/github-token
          readOnly: true
      volumes:
      - name: github-token
        secret:
          secretName: oauth-token
  tektoncd/pipeline:
  - name: pull-tekton-pipeline-build-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-pipeline-build-tests"
    trigger: "(?m)^/test (all|pull-tekton-pipeline-build-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-pipeline-unit-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test tekton-pipeline-unit-tests"
    trigger: "(?m)^/test (all|tekton-pipeline-unit-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-pipeline-integration-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-pipeline-integration-tests"
    trigger: "(?m)^/test (all|pull-tekton-pipeline-integration-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-pipeline-go-coverage
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-pipeline-go-coverage"
    trigger: "(?m)^/test (all|pull-tekton-pipeline-go-coverage),?(\\s+|$)"
    optional: true
    decorate: true
    clone_uri: "https://github.com/tektoncd/pipeline.git"
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:v20190612-ae60484
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--postsubmit-gcs-bucket=tekton-prow"
        - "--postsubmit-job-name=post-tekton-pipeline-go-coverage"
        - "--artifacts=$(ARTIFACTS)"
        - "--profile-name=coverage_profile.txt"
        - "--cov-target=."
        - "--cov-threshold-percentage=80"
        - "--github-token=/etc/github-token/oauth"
        volumeMounts:
        - name: github-token
          mountPath: /etc/github-token
          readOnly: true
      volumes:
      - name: github-token
        secret:
          secretName: oauth-token
  tektoncd/catalog:
  - name: pull-tekton-catalog-build-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-catalog-build-tests"
    trigger: "(?m)^/test (all|pull-tekton-catalog-build-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-catalog-unit-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-catalog-unit-tests"
    trigger: "(?m)^/test (all|pull-tekton-catalog-unit-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-catalog-integration-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-catalog-integration-tests"
    trigger: "(?m)^/test (all|pull-tekton-catalog-integration-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  tektoncd/triggers:
  - name: pull-tekton-triggers-build-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-triggers-build-tests"
    trigger: "(?m)^/test (all|pull-tekton-triggers-build-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--build-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-triggers-unit-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test tekton-triggers-unit-tests"
    trigger: "(?m)^/test (all|tekton-triggers-unit-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--unit-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account
  - name: pull-tekton-triggers-integration-tests
    agent: kubernetes
    always_run: true
    rerun_command: "/test pull-tekton-triggers-integration-tests"
    trigger: "(?m)^/test (all|pull-tekton-triggers-integration-tests),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/test-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/presubmit-tests.sh"
        - "--integration-tests"
        volumeMounts:
        - name: test-account
          mountPath: /etc/test-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/test-account/service-account.json
        - name: E2E_CLUSTER_REGION
          value: us-central1
      volumes:
      - name: test-account
        secret:
          secretName: test-account

postsubmits:
  tektoncd/cli:
  - name: post-tekton-cli-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest # we may want ours here
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  tektoncd/dashboard:
  - name: tekton-dashboard-publish-images
    always_run: true
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/nightly-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/publish-images.sh"
        volumeMounts:
        - name: nightly-account
          mountPath: /etc/nightly-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/nightly-account/service-account.json
      volumes:
      # this secret/service-account has access to the tekton-nightly project, specifically make it possible to push
      # images to gcr.io/tekton-nightly 👼
      - name: nightly-account
        secret:
          secretName: nightly-account
  tektoncd/experimental:
  - name: tekton-dashboard-publish-images
    always_run: true
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/nightly-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./test/publish-images.sh"
        volumeMounts:
        - name: nightly-account
          mountPath: /etc/nightly-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/nightly-account/service-account.json
      volumes:
      # this secret/service-account has access to the tekton-nightly project, specifically make it possible to push
      # images to gcr.io/tekton-nightly 👼
      - name: nightly-account
        secret:
          secretName: nightly-account
  tektoncd/operator:
  - name: post-tekton-operator-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest # we may want ours here
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
  tektoncd/pipeline:
  - name: tekton-pipeline-publish-images
    always_run: true
    spec:
      containers:
      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
        imagePullPolicy: Always
        args:
        - "--scenario=kubernetes_execute_bazel"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/nightly-account/service-account.json"
        - "--upload=gs://tekton-prow/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
        - "./hack/nightly.sh"
        volumeMounts:
        - name: nightly-account
          mountPath: /etc/nightly-account
          readOnly: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/nightly-account/service-account.json
      volumes:
      # this secret/service-account has access to the tekton-nightly project, specifically make it possible to push
      # images to gcr.io/tekton-nightly 👼
      - name: nightly-account
        secret:
          secretName: nightly-account
  - name: post-tekton-pipeline-go-coverage
    branches:
    - master
    agent: kubernetes
    decorate: true
    spec:
      containers:
      - image: gcr.io/knative-tests/test-infra/coverage:latest # we may want ours here
        imagePullPolicy: Always
        command:
        - "/coverage"
        args:
        - "--artifacts=$(ARTIFACTS)"
        - "--cov-threshold-percentage=0"
