# Copyright 2019-2024 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

prowjob_namespace: default
pod_namespace: test-pods

branch-protection:
  orgs:
    tektoncd:
      # Protect all branches in tekton
      # This means all prow jobs with "always_run" set are required
      # to pass before tide can merge the PR.
      # Currently this is manually enabled by the tekton org admins,
      # but it's stated here for documentation and reference purposes.
      protect: true
      # Admins can overrule checks
      enforce_admins: false
      # Enforce EasyCLA for all repos
      required_status_checks:
        contexts:
        - EasyCLA
      repos:
        dashboard:
          required_status_checks:
            contexts:
            - "Build tests"
            - "E2E tests (k8s-oldest, read-only)"
            - "E2E tests (k8s-oldest, read-write)"
            - "E2E tests (k8s-plus-one, read-only)"
            - "E2E tests (k8s-plus-one, read-write)"
            - "Unit tests"
        pipeline:
          required_status_checks:
            contexts:
            - "build"
            - "test"
            - "lint"
            - "Check generated code"
            - "Multi-arch build"
            - "e2e-tests / e2e tests (k8s-oldest, alpha)"
            - "e2e-tests / e2e tests (k8s-oldest, beta)"
            - "e2e-tests / e2e tests (k8s-oldest, stable)"
            - "e2e-tests / e2e tests (k8s-latest-minus-three, alpha)"
            - "e2e-tests / e2e tests (k8s-latest-minus-three, beta)"
            - "e2e-tests / e2e tests (k8s-latest-minus-three, stable)"
            - "e2e-tests / e2e tests (k8s-latest-minus-two, alpha)"
            - "e2e-tests / e2e tests (k8s-latest-minus-two, beta)"
            - "e2e-tests / e2e tests (k8s-latest-minus-two, stable)"
            - "e2e-tests / e2e tests (k8s-latest-minus-one, alpha)"
            - "e2e-tests / e2e tests (k8s-latest-minus-one, beta)"
            - "e2e-tests / e2e tests (k8s-latest-minus-one, stable)"
            - "e2e-tests / e2e tests (k8s-latest, alpha)"
            - "e2e-tests / e2e tests (k8s-latest, beta)"
            - "e2e-tests / e2e tests (k8s-latest, stable)"
        operator:
          required_status_checks:
            contexts:
            - "build"
            - "test"
            - "lint"
            - "Check generated code"
            - "Multi-arch build"
            - "e2e-tests / e2e tests (k8s-oldest)"
            - "e2e-tests / e2e tests (k8s-plus-one)"
        mcp-server:
          required_status_checks:
            contexts:
            - "build"
            - "test"
            - "lint"
        triggers:
          required_status_checks:
            contexts:
            - "lint"
            - "Tekton Triggers CI"
        cli:
          required_status_checks:
            contexts:
            - "build"
            - "test"
            - "lint"
            - "Check generated code"
            - "Multi-arch build"
            - "e2e-tests / e2e tests (k8s-oldest)"
            - "e2e-tests / e2e tests (k8s-plus-one)"
        pruner:
          required_status_checks:
            contexts:
            - "golangci-lint / lint (pull_request)"
            - "Pruner kind E2E Tests / k8s (v1.28.x) / e2e test (pull_request)"
            - "Pruner kind E2E Tests / k8s (v1.32.x) / e2e test (pull_request)"
            - "Pruner kind E2E Tests / pipelines-lts (v1.0.0) / e2e test (pull_request)"
    tektoncd-catalog:
      # Protect all branches in tektoncd-catalog
      # This means all prow jobs with "always_run" set are required
      # to pass before tide can merge the PR.
      # Currently this is manually enabled by the tekton org admins,
      # but it's stated here for documentation and reference purposes.
      protect: true
      # Admins can overrule checks
      enforce_admins: false
      # Enforce EasyCLA for all repos
      required_status_checks:
        contexts:
        - EasyCLA

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  terminated_pod_ttl: 30m
  max_pod_age: 3h

tide:
  sync_period: 2m
  queries:
  - repos:
    - tektoncd-catalog/golang
    - tektoncd/actions
    - tektoncd/ahmetb-gen-crd-api-reference-docs
    - tektoncd/catalog
    - tektoncd/catlin
    - tektoncd/chains
    - tektoncd/cli
    - tektoncd/community
    - tektoncd/dashboard
    - tektoncd/friends
    - tektoncd/hub
    - tektoncd/mcp-server
    - tektoncd/operator
    - tektoncd/pipeline
    - tektoncd/plumbing
    - tektoncd/pruner
    - tektoncd/resolution
    - tektoncd/results
    - tektoncd/triggers
    - tektoncd/website
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/release-note-label-needed
    - do-not-merge/requires-unreleased-pipelines
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  merge_method:
    tektoncd-catalog/golang: rebase
    tektoncd/actions: rebase
    tektoncd/ahmetb-gen-crd-api-reference-docs: rebase
    tektoncd/catalog: rebase
    tektoncd/catlin: rebase
    tektoncd/chains: squash
    tektoncd/cli: rebase
    tektoncd/community: rebase
    tektoncd/dashboard: rebase
    tektoncd/friends: rebase
    tektoncd/hub: rebase
    tektoncd/mcp-server: rebase
    tektoncd/operator: rebase
    tektoncd/pipeline: rebase
    tektoncd/plumbing: rebase
    tektoncd/pruner: rebase
    tektoncd/resolution: rebase
    tektoncd/results: rebase
    tektoncd/triggers: rebase
    tektoncd/website: rebase
  target_url: https://prow.infra.tekton.dev/tide
  priority:
  - labels: ["kind/flake", "priority/critical-urgent"]
  - labels: ["kind/failing-test", "priority/critical-urgent"]
  - labels: ["kind/bug", "priority/critical-urgent"]
  pr_status_base_urls:
    '*': https://prow.infra.tekton.dev/pr

deck:
  spyglass:
    size_limit: 200000000 # 200MB
    gcs_browser_prefix: https://gcsweb.k8s.io/gcs/
    testgrid_config: gs://tekton-prow/testgrid/config
    testgrid_root: https://testgrid.k8s.io/
    lenses:
    - lens:
        name: metadata
      required_files:
      - ^(?:started|finished)\.json$
      optional_files:
      - ^(?:podinfo|prowjob)\.json$
    - lens:
        name: buildlog
        config:
          highlighter:
            endpoint: http://halogen.default.svc.cluster.local
            pin: true
            auto: false
          highlight_regexes:
          - Automatic merge failed
          - cannot convert.+to type
          - "cannot use.+as.+(type|value)"
          - Cluster failed to initialize
          - cluster unreachable
          - "compilepkg: error"
          - configuration error
          - contact Google support
          - could not apply prowjob annotations
          - could not find the referenced.+TestGroup
          - could not write config
          - "couldn't load prow config:"
          - curl.+Failed to connect
          - DATA RACE
          - dirty working directory
          - ^E\d{4} \d\d:\d\d:\d\d\.\d+
          - "(Error|ERROR|error)s?:"
          - Error.+executing benchmarks
          - Expected.+got
          - FAILED. See logs
          - failed to acquire k8s binaries
          - failed to solve
          - (FAIL|Failure \[)\b
          - fatal error
          - flag provided but not defined
          - Full Stack Trace
          - got.+expected
          - hash mismatch
          - Hit an unsupported type
          - imported but not used
          - Incompatible changes
          - incorrect boilerplate
          - indent-error-flow
          - INSTALLATION FAILED
          - is a misspelling
          - LimitExceeded
          - "make:.+Error"
          - Master not detected
          - Merge conflict
          - not enough arguments in call
          - panic\b
          - Previous (write|read)
          - Process did not finish before.+timeout
          - race detected
          - security token.+invalid
          - "signal: killed"
          - Something went wrong
          - too few arguments
          - too many errors
          - "[Tt]imed out"
          - type.+has no field
          - unable to start the controlplane
          - "undefined:"
          - Unfortunately, an error
          - unused.+deadcode
          - "[Uu]nexpected error"
          - verify.+failed
          - want.+got
          - Your cluster may not be fully functional
          - ^\s+\^$
          - \[(0;)?31m
          - "^diff " # [+-]{3}\\s" has too much noise from go test output and set -x
          - â€¢ Failure
          # This highlights the start of bazel tests/runs to skip go importing noise.
          - "^INFO: Analyzed \\d+ targets"
      required_files:
        - ^.*build-log\.txt$
    - lens:
        name: junit
      required_files:
        - ^artifacts(/.*/|/)junit.*\.xml$ # https://regex101.com/r/vCSegS/1
    - lens:
        name: coverage
      required_files:
        - ^artifacts/filtered\.cov$
      optional_files:
        - ^artifacts/filtered\.html$
      required_files:
        - ^podinfo\.json$
      optional_files:
        - ^prowjob\.json$
    - lens:
        name: links
      required_files:
        - artifacts/.*\.link\.txt
  tide_update_period: 1s
