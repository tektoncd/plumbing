apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-delete-k8s-cluster-ppc64le
spec:
  description: Installation of k8s cluster remotely via ssh commands. Get config files via scp.
  workspaces:
  - name: k8s-shared
    description: workspace to store k8s config file after cluster setup
    mountPath: /root/.kube
    optional: true
  - name: registry-shared
    description: workspace to store registry credentials & certificate file after cluster setup
    mountPath: /root/.docker
    optional: true
  - name: ssh-secret
    description: workspace to get ssh key
    mountPath: /root/.ssh
  params:
    - name: remote-host
      type: string
      description: Remote host to connect
      default: "ppc64le-cluster.bastion-p.svc.cluster.local"
    - name: remote-user
      type: string
      description: SSH username
      default: root
    - name: remote-port
      type: string
      description: SSH port
      default: "22"
    - name: action
      type: string
      description: create and delete actions are supported
      default: create
  env:
    - name: REMOTE_HOST
      value: $(params.remote-host)
    - name: REMOTE_USER
      value: $(params.remote-user)
    - name: REMOTE_PORT
      value: $(params.remote-port)
    - name: ACTION
      value: $(params.action)
  steps:
    - name: ssh
      image: kroniak/ssh-client
      script: |
        ssh -p ${REMOTE_PORT} -o StrictHostKeyChecking=no -o LogLevel=ERROR ${REMOTE_USER}@${REMOTE_HOST} k8smanager ${ACTION}
        if [ "${ACTION}" == "create" ]; then
          scp -o StrictHostKeyChecking=no -o LogLevel=ERROR -P ${REMOTE_PORT} ${REMOTE_USER}@${REMOTE_HOST}:/root/data/share/config $(workspaces.k8s-shared.path)/config
          scp -o StrictHostKeyChecking=no -o LogLevel=ERROR -P ${REMOTE_PORT} ${REMOTE_USER}@${REMOTE_HOST}:/root/data/share/config.json $(workspaces.registry-shared.path)/config.json
          scp -o StrictHostKeyChecking=no -o LogLevel=ERROR -P ${REMOTE_PORT} ${REMOTE_USER}@${REMOTE_HOST}:/root/data/share/cert.pem $(workspaces.registry-shared.path)/cert.pem
        fi
