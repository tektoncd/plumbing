apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: "single-arch-build-and-push"
spec:
  params:
    - name: gitRepository
      description: The git repository that hosts context and Dockerfile
    - name: gitRevision
      description: The Git revision to be used.
    - name: gitCloneDepth
      description: Number of commits in the change + 1
    - name: imageUrl
      description: The url to push the built image to
    - name: tags
      description: Comma separated list of tags
    - name: contextPath
      description: Path to the context in the repo to use when building the image
  workspaces:
    - name: source
    - name: secret
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.gitRepository)
        - name: revision
          value: $(params.gitRevision)
        - name: depth
          value: $(params.gitCloneDepth)
      workspaces:
        - name: output
          workspace: source
    - name: build-and-push
      runAfter: [git-clone]
      params:
        - name: contextPath
          value: $(params.contextPath)
        - name: imageUrl
          value: $(params.imageUrl)
        - name: tags
          value: $(params.tags)
      workspaces:
        - name: source
          workspace: source
        - name: secret
          workspace: secret
      taskSpec:
        params:
          - name: contextPath
          - name: imageUrl
          - name: tags
        workspaces:
          - name: source
          - name: secret
        steps:
          - name: build-and-push
            workingDir: $(workspaces.source.path)
            image: gcr.io/kaniko-project/executor:v1.23.2-debug
            env:
              - name: IMAGE_REGISTRY_CREDENTIALS
                value: $(workspaces.secret.path)/credentials
              - name: CONTEXT_PATH
                value: $(params.contextPath)
              - name: TAGS
                value: $(params.tags)
              - name: IMAGE_URL
                value: $(params.imageUrl)
            script: |
              #!/busybox/sh
              # Setup the destination parameters
              OIFS=$IFS
              IFS=","
              DESTINATIONS=""
              for tag in ${TAGS}; do DESTINATIONS="${DESTINATIONS} --destination ${IMAGE_URL}:${tag}"; done
              IFS=$OIFS

              IMAGE_REGISTRY_USER=tekton-robot
              IMAGE_REGISTRY_TOKEN=$(cat "$IMAGE_REGISTRY_CREDENTIALS")
              AUTH=$(echo -n ${IMAGE_REGISTRY_USER}:${IMAGE_REGISTRY_TOKEN} | base64)
              echo "{\"auths\": {\"ghcr.io\": {\"auth\": \"${AUTH}\"}}}" > /kaniko/.docker/config.json

              # Run the build
              /kaniko/executor \
                --dockerfile=Dockerfile \
                --context=$(params.contextPath) \
                $DESTINATIONS
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: build-and-push-image
spec:
  params:
  - name: gitRepository
    description: The git repository that hosts context and Dockerfile
  - name: gitRevision
    description: The Git revision to be used.
  - name: contextPath
    description: The path to the context within 'gitRepository'
  - name: registry
    description: The container registry *registry*/namespace/name tag
  - name: namespace
    description: The namespace (aka user, org, project) registry/*namespace*/name tag
  - name: imageName
    description: The image name (aka repository) registry/namespace/*name* tag
  - name: imageTags
    description: The image tag registry/namespace/name *tag*
  - name: buildUUID
    description: The build UUID is used for log collection
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: build-and-push-$(tt.params.imageName)-
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        plumbing.tekton.dev/image: $(tt.params.imageName)
    spec:
      pipelineRef:
        name: single-arch-build-and-push
      workspaces:
      - name: source
        volumeClaimTemplate:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
      - name: secret
        secret:
          secretName: ghcr-creds
      params:
        - name: contextPath
          value: $(tt.params.contextPath)
        - name: gitRepository
          value: "https://$(tt.params.gitRepository)"
        - name: gitRevision
          value: $(tt.params.gitRevision)
        - name: gitCloneDepth
          value: "2"
        - name: imageUrl
          value: "$(tt.params.registry)/$(tt.params.namespace)/$(tt.params.imageName)"
        - name: tags
          value: "$(tt.params.imageTags)"
