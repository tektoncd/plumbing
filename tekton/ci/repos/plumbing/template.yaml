- op: add
  path: /spec/resourcetemplates
  value:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: plumbing-unit-tests-
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/source-event-id: $(tt.params.sourceEventId)
        tekton.dev/check-name: plumbing-unit-tests
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
        tekton.dev/kind: ci
      annotations:
        tekton.dev/gitRevision: "$(tt.params.gitRevision)"
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      workspaces:
        - name: sources
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
      pipelineRef:
        name: tekton-golang-tests
      params:
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: pullRequestBaseRef
          value: $(tt.params.pullRequestBaseRef)
        - name: gitRepository
          value: "$(tt.params.gitRepository)"
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "**"  # always run for now
        - name: checkName
          value: plumbing-unit-tests
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
        - name: package
          value: $(tt.params.package)
        - name: folders
          value:
            - bots/buildcaptain
            - bots/mariobot
            - pipelinerun-logs
            - tekton/ci/interceptors/add-team-members
            - tekton/ci/interceptors/add-pr-body
            - tekton/ci/interceptors/github
            - tekton/ci/custom-tasks/pr-commenter
            - tekton/ci/custom-tasks/pr-status-updater
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: plumbing-image-build-
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/source-event-id: $(tt.params.sourceEventId)
        tekton.dev/check-name: plumbing-image-build
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
        tekton.dev/kind: ci
      annotations:
        tekton.dev/gitRevision: "$(tt.params.gitRevision)"
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      workspaces:
        - name: sources
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
      pipelineRef:
        name: tekton-image-build
      params:
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: pullRequestBaseRef
          value: $(tt.params.pullRequestBaseRef)
        - name: gitRepository
          value: "$(tt.params.gitRepository)"
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/**"
        - name: checkName
          value: plumbing-image-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
        - name: package
          value: $(tt.params.package)
        - name: imagePrefix
          value: gcr.io/tekton-nightly/dogfooding/ci
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: tekton-golang-lint-
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/source-event-id: $(tt.params.sourceEventId)
        tekton.dev/check-name: plumbing-golang-lint
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitRevision: "$(tt.params.gitRevision)"
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      workspaces:
        - name: sources
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
      pipelineRef:
        name: tekton-golang-lint
      params:
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: pullRequestBaseRef
          value: $(tt.params.pullRequestBaseRef)
        - name: gitRepository
          value: "$(tt.params.gitRepository)"
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/**"
        - name: checkName
          value: plumbing-image-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
        - name: fileFilterRegex
          value: ".*"
        - name: checkName
          value: plumbing-golang-lint
        - name: package
          value: $(tt.params.package)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: tekton-yamllint-
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/source-event-id: $(tt.params.sourceEventId)
        tekton.dev/check-name: plumbing-yamllint
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitRevision: "$(tt.params.gitRevision)"
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-yamllint
      workspaces:
        - name: source
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
      params:
        - name: gitRepository
          value: $(tt.params.gitRepository)
        - name: gitRevision
          value: $(tt.params.gitRevision)
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: ".*"
        - name: checkName
          value: plumbing-yamllint
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
        - name: args
          value:
            - bots/buildcaptain/config
            - bots/mariobot/config
            - pipelinerun-logs/config
            - boskos
            - gubernator
            - prow
            - robocat
            - tekton
