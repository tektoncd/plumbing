apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: tekton-plumbing-ci-pipeline
  namespace: tektonci
spec:
  params:
  - name: buildUUID
    description: UUID used to track a CI Pipeline Run in logs
  - name: package
    description: org/repo
  - name: pullRequestNumber
    description: The pullRequestNumber
  - name: gitRepository
    description: The git repository that hosts context and Dockerfile
  - name: gitRevision
    description: The Git revision to be used.
  - name: gitCloneDepth
    description: Number of commits in the change + 1
  - name: gitHubCommand
    description: |
      The GitHub command that was used a trigger. This is only available when
      this template is triggered by a comment. The default value is for the
      case of a pull_request event.
    default: ""
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-ko-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-ko-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: ko
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/ko/**"
        - name: checkName
          value: plumbing-ko-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-ko-gcloud-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-ko-gcloud-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: ko-gcloud
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/ko-gcloud/**"
        - name: checkName
          value: plumbing-ko-gcloud-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-hub-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-hub-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: hub
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/hub/**"
        - name: checkName
          value: plumbing-hub-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-kubectl-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-kubectl-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: kubectl
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/kubectl/**"
        - name: checkName
          value: plumbing-kubectl-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-skopeo-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-skopeo-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: skopeo
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/skopeo/**"
        - name: checkName
          value: plumbing-skopeo-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-test-runner-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-test-runner-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: test-runner
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/test-runner/**"
        - name: checkName
          value: plumbing-test-runner-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-tkn-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-tkn-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: tkn
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/tkn/**"
        - name: checkName
          value: plumbing-tkn-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-coverage-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-coverage-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: coverage
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/coverage/**"
        - name: checkName
          value: plumbing-coverage-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: tekton-yamllint-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-yamllint
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-yamllint
      params:
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: ".*"
        - name: checkName
          value: plumbing-yamllint
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
        - name: folders
          value: pipelinerun-logs/config boskos gubernator prow robocat tekton
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: tekton-golang-lint-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-golang-lint
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-golang-lint
      params:
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: ".*"
        - name: checkName
          value: plumbing-golang-lint
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: plumbing-alpine-git-nonroot-build-$(uid)
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-alpine-git-nonroot-build
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-image-build
      params:
        - name: imageName
          value: alpine-git-nonroot
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: "tekton/images/alpine-git-nonroot/**"
        - name: checkName
          value: plumbing-alpine-git-nonroot-build
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)
