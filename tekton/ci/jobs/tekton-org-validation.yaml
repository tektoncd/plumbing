---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: peribolos-dry-run
spec:
  params:
  - name: configPath
    default: org/org.yaml
  workspaces:
    - name: input
  steps:
  - name: peribolos
    image: gcr.io/k8s-prow/peribolos:v20220203-9315ecd1a0
    command:
    - /bin/sh
    args:
    - -c
    - |
      set -ex
      /peribolos -config-path /workspace/input/$(params.configPath) -fix-org -fix-org-members -fix-teams -fix-team-repos -fix-team-members -github-token-path /etc/github/bot-token
    volumeMounts:
    - name: github-oauth
      mountPath: /etc/github
  volumes:
  - name: github-oauth
    secret:
      secretName: bot-token-github

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: org-validation
  namespace: tekton-ci
spec:
  params:
    - name: pullRequestNumber
      description: The pullRequestNumber
    - name: pullRequestBaseRef
      description: The pull request base branch
    - name: gitRepository
      description: The git repository that hosts context and Dockerfile
    - name: gitCloneDepth
      description: Number of commits in the change + 1
    - name: fileFilterRegex
      description: Names regex to be matched in the list of modified files
    - name: checkName
      description: The name of the GitHub check that this pipeline is used for
    - name: gitHubCommand
      description: The command that was used to trigger testing
  workspaces:
    - name: sources
      description: Workspace where the git repo is prepared for testing
  tasks:
    - name: clone-repo
      taskRef:
        resolver: bundles
        params:
          - name: bundle
            value: ghcr.io/tektoncd/catalog/upstream/tasks/git-batch-merge:0.2
          - name: name
            value: git-batch-merge
          - name: kind
            value: task
      params:
        - name: url
          value: $(params.gitRepository)
        - name: mode
          value: "merge"
        - name: revision
          value: $(params.pullRequestBaseRef)
        - name: refspec
          value: refs/heads/$(params.pullRequestBaseRef):refs/heads/$(params.pullRequestBaseRef)
        - name: batchedRefs
          value: "refs/pull/$(params.pullRequestNumber)/head"
      workspaces:
        - name: output
          workspace: sources
    - name: check-name-matches
      taskRef:
        name: check-name-matches
      params:
        - name: gitHubCommand
          value: $(params.gitHubCommand)
        - name: checkName
          value: $(params.checkName)
    - name: check-git-files-changed
      runAfter: ['clone-repo']
      taskRef:
        name: check-git-files-changed
      params:
        - name: gitCloneDepth
          value: $(params.gitCloneDepth)
        - name: regex
          value: $(params.fileFilterRegex)
      workspaces:
        - name: input
          workspace: sources
    - name: org-validation
      when:  # implicit dependency on the check tasks
        - input: $(tasks.check-name-matches.results.check)
          operator: in
          values: ["passed"]
        - input: $(tasks.check-git-files-changed.results.check)
          operator: in
          values: ["passed"]
      workspaces:
        - name: input
          workspace: sources
      taskRef:
        name: peribolos-dry-run
