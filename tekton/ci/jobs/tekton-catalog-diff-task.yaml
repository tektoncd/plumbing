apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: diff-task-job
spec:
  workspaces:
    - name: source
      description: Workspace where the git repo is prepared for linting.
  params:
    - name: pullRequestUrl
      description: The HTML URL for the pull request
    - name: gitRepository
      description: The git repository that hosts context and Dockerfile
    - name: pullRequestBaseRef
      description: The pull request base branch
    - name: pullRequestNumber
      description: The pullRequestNumber
  tasks:
    - name: clone-repo
      taskRef:
        resolver: bundles
        params:
          - name: bundle
            value: ghcr.io/tektoncd/catalog/upstream/tasks/git-clone:0.7
          - name: name
            value: git-clone
          - name: kind
            value: task
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.gitRepository)
        - name: revision
          value: $(params.pullRequestBaseRef)
        - name: subdirectory
          value: ""
        - name: deleteExisting
          value: "true"
    - name: get-task-diff
      runAfter:
        - clone-repo
      taskRef:
        resolver: bundles
        params:
          - name: bundle
            value: ghcr.io/tektoncd/catalog/upstream/tasks/git-cli:0.3
          - name: name
            value: git-cli
          - name: kind
            value: task
      workspaces:
        - name: source
          workspace: source
      params:
        - name: GIT_SCRIPT
          value: |
            # This needs to be set or the pipeline will fail on the next task.
            echo -n "" > $(results.commit.path)

            temp_branch="temp-branch-pr-$(params.pullRequestNumber)"
            git fetch origin pull/$(params.pullRequestNumber)/head:${temp_branch}
            git checkout ${temp_branch}

            changed_task_version=$(git diff-tree --no-commit-id --name-only -r \
                          $(git rev-parse --abbrev-ref HEAD)|grep '^task/'| \
                          sed 's,\([^/]*/[^/]*/[^/]*\).*,\1,'|sort -u)

            if [[ -z ${changed_task_version} ]];then
                echo "Not a commit with a change in task"
                exit 0
            fi

            check_if_task_version_on_main=$(git ls-tree -r origin/$(params.pullRequestBaseRef) --name-only ${changed_task_version} || true)
            if [[ -n "${check_if_task_version_on_main}" ]];then
                echo "Not a new version, since '${changed_task_version}' is already in main"
                exit 0
            fi

            if [[ $(basename ${changed_task_version}) == 0.1 ]];then
                echo "New task 0.1, skipping the diff"
                exit 0
            fi

            task_name=$(basename $(dirname ${changed_task_version}))
            task_version=$(basename ${changed_task_version})

            previous_task_version=$(find task/${task_name} -maxdepth 1 -regex '.*/[0-9]\.[0-9]$' \! -name "${task_version}" |sort -run|head -1 | cut -d "/" -f3)

            (
                echo "<details><summary>Diff between version ${previous_task_version} and ${task_version}</summary>"
                echo
                echo "\`\`\`\`diff"
                git diff --no-index task/${task_name}/${previous_task_version} task/${task_name}/${task_version}
                echo "\`\`\`\`"
                echo
                echo "</details>"
            ) | tee diff-task-results.txt > /dev/null

    - name: post-comment
      runAfter:
        - get-task-diff
      when:
        - input: $(tasks.get-task-diff.results.commit)
          operator: notin
          values: [""]
      taskRef:
        resolver: bundles
        params:
          - name: bundle
            value: ghcr.io/tektoncd/catalog/upstream/tasks/github-add-comment:0.3
          - name: name
            value: github-add-comment
          - name: kind
            value: task
      params:
        - name: COMMENT_OR_FILE
          value: diff-task-results.txt
        - name: GITHUB_TOKEN_SECRET_NAME
          value: bot-token-github
        - name: GITHUB_TOKEN_SECRET_KEY
          value: bot-token
        - name: REQUEST_URL
          value: $(params.pullRequestUrl)
      workspaces:
        - name: comment-file
          workspace: source
