apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: tekton-plumbing-ci-pipeline
  namespace: tektonci
spec:
  params:
  - name: buildUUID
    description: UUID used to track a CI Pipeline Run in logs
  - name: package
    description: org/repo
  - name: pullRequestNumber
    description: The pullRequestNumber
  - name: pullRequestUrl
    description: The HTML URL for the pull request
  - name: gitRepository
    description: The git repository that hosts context and Dockerfile
  - name: gitRevision
    description: The Git revision to be used.
  - name: gitCloneDepth
    description: Number of commits in the change + 1
  - name: gitHubCommand
    description: |
      The GitHub command that was used a trigger. This is only available when
      this template is triggered by a comment. The default value is for the
      case of a pull_request event.
    default: ""
  - name: labels
    description: List of labels currently on the Pull Request
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: tekton-yamllint-
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-yamllint
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitRevision: "$(tt.params.gitRevision)"
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-yamllint
      params:
        - name: gitRepository
          value: $(tt.params.gitRepository)
        - name: gitRevision
          value: $(tt.params.gitRevision)
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: ".*"
        - name: checkName
          value: plumbing-yamllint
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
        - name: folders
          value: bots/buildcaptain/config bots/mariobot/config pipelinerun-logs/config boskos gubernator prow robocat tekton
      workspaces:
        - name: source
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: tekton-golang-lint-
      labels:
        prow.k8s.io/build-id: $(tt.params.buildUUID)
        tekton.dev/check-name: plumbing-golang-lint
        tekton.dev/kind: ci
        tekton.dev/pr-number: $(tt.params.pullRequestNumber)
      annotations:
        tekton.dev/gitRevision: "$(tt.params.gitRevision)"
        tekton.dev/gitURL: "$(tt.params.gitRepository)"
    spec:
      serviceAccountName: tekton-ci-jobs
      pipelineRef:
        name: tekton-golang-lint
      params:
        - name: pullRequestNumber
          value: $(tt.params.pullRequestNumber)
        - name: gitCloneDepth
          value: $(tt.params.gitCloneDepth)
        - name: fileFilterRegex
          value: ".*"
        - name: checkName
          value: plumbing-golang-lint
        - name: gitHubCommand
          value: $(tt.params.gitHubCommand)
      resources:
      - name: source
        resourceSpec:
          type: git
          params:
          - name: revision
            value: $(tt.params.gitRevision)
          - name: url
            value: $(tt.params.gitRepository)
          - name: depth
            value: $(tt.params.gitCloneDepth)