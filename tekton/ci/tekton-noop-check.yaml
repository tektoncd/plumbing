apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: tekton-noop-check
  namespace: tektonci
spec:
  params:
    - name: passorfail
      description: Should the CI Job 'pass' or 'fail'
    - name: message
      description: Message to be logged in the CI Job
    - name: gitCloneDepth
      description: Number of commits in the change + 1
    - name: fileFilterRegex
      description: Names regex to be matched in the list of modified files
    - name: checkName
      description: The name of the GitHub check that this pipeline is used for
    - name: gitHubCommand
      description: The command that was used to trigger testing
  resources:
    - name: source
      type: git
  tasks:
    - name: ci-job
      conditions:
      - conditionRef: "check-git-files-changed"
        params:
          - name: gitCloneDepth
            value: $(params.gitCloneDepth)
          - name: regex
            value: $(params.fileFilterRegex)
        resources:
          - name: source
            resource: source
      - conditionRef: "check-name-matches"
        params:
          - name: gitHubCommand
            value: $(params.gitHubCommand)
          - name: checkName
            value: $(params.checkName)
      taskRef:
        name: tekton-noop
      params:
        - name: message
          value: $(params.message)
        - name: passorfail
          value: $(params.passorfail)
      resources:
        inputs:
          - name: source
            resource: source
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: tekton-random-check
  namespace: tektonci
spec:
  params:
    - name: message
      description: Message to be logged in the CI Job
    - name: gitCloneDepth
      description: Number of commits in the change + 1
    - name: fileFilterRegex
      description: Names regex to be matched in the list of modified files
    - name: checkName
      description: The name of the GitHub check that this pipeline is used for
    - name: gitHubCommand
      description: The command that was used to trigger testing
  resources:
    - name: source
      type: git
  tasks:
    - name: check-reset
      taskRef:
        name: tekton-ci-reset-check-status
      params:
        - name: checkName
          value: $(params.checkName)
    - name: ci-job
      conditions:
      - conditionRef: "check-git-files-changed"
        params:
          - name: gitCloneDepth
            value: $(params.gitCloneDepth)
          - name: regex
            value: $(params.fileFilterRegex)
        resources:
          - name: source
            resource: source
      - conditionRef: "check-name-matches"
        params:
          - name: gitHubCommand
            value: $(params.gitHubCommand)
          - name: checkName
            value: $(params.checkName)
      taskRef:
        name: tekton-fails-sometimes
      params:
        - name: message
          value: $(params.message)
      resources:
        inputs:
          - name: source
            resource: source